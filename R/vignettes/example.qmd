---
title: "Example Vignette"
author: "Qi Yu"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Example Vignette}
  %\VignetteEngine{quarto::quarto}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```


## Load meanTIR_data

An input dataset for *estTIR* is a dataframe containing time to each CGM readings along with time-dependent or time-independent covariates of interest. The input dataset should take long format, where
each row contains the information in one time interval in which a CGM is observed. As such, multiple rows in the dataset may correspond to one subject. 

*meanTIR_data* is a simulated dataset perturbated from a real dataset. *meanTIR_data* contains 50 subjects. For each subject, *meanTIR_data* contains values for the following eight variables: *patient_id*, which is the unique identifier for each subject; *glucose*, which is the CGM reading; *time*, which records the time in minutes reading CGM; x1, which is a binary covariate; x2, which is a continuous covariate.

Note: The Naïve estimator and the proposed estimator with non-informative follow-up duration require a minimum dataset including *patient_id*, *glucose*, and *time*. For the proposed estimator with informative follow-up duration, at least one additional covariate is necessary.

```{r}
library(meanTIR)
```

```{r}
data(meanTIR)
```


## Main function for calculating mean TIR

Function *estTIR()* in our package is the main function to calculate mean TIR. It has following arguments:

- data: A long format data frame. An example dataframe is 'dataSample'.
- time: A range of time for calculating TIR. '[a,b]' represents calculating TIR between time range from a to b.
- range: A range of target glucose values. '[70,180]' represents calculating TIR 70-180 mg/dL.
- method: Indicating the method used for calculating TIR. Values can be 'naive' and 'proposed' (default).
- model: Used only when method = 'proposed'. Indicating the model for follow-up duration. Values can be 'NULL' (non-informative, default) and 'cox' (informative; Cox-modeled follow-up duration.) 
- formula: Indicating the covariates for the Cox's model. The formula has the format like "x1+x2".
- boot: Number of bootstrap replicates used to obtain the standard error estimation. The default is 'NULL' which indicates bootstrap is not conducted.
- id: Indicating the column name of the subject identifier in data. The default is 'patient_id'.
- time_col: Indicating the column name of the time for reading CGM. The default is 'time'.
- glucose: Indicating the column name of CGM readings. The default is 'glucose'.
- period: Indicating the period of reading CGM. The default is 5 (minutes).

Function *print()* summary the results returned by *estTIR()*. If 'boot' is specified in *estTIR()*, *print()* shows:

- est: mean TIR estimation from the given dataset.
- std err: standard error for mean TIR.
- CI.025 CI.975: $95\%$ confidence interval of mean TIR estimation.

If 'boot' is not specified, *print()* will only print mean TIR estimation.

### Calculating mean TIR with naive method. 

The following code is used to calculate mean TIR by the naive method with target glucose range 70-180mg/dL, time window 0-3 days (0-4200 minutes)，and 20 bootstrap replicates.

```{r}
print(estTIR(meanTIR_data, method = "naive", time = c(0, 4200), range = c(70, 180), boot = 20))
```
### Calculate mean TIR with the proposed method under non-informative follow-up duration

The following code is used to calculate mean TIR by the proposed method under non-informative patient's follow-up duration assumption with glucose range 70-180mg/dL, time window 0-3 days (0-4200 minutes)，and 20 bootstrap replicates.

```{r}
print(estTIR(meanTIR_data, method = "proposed", time = c(0, 4200), range = c(70, 180), boot = 20))
```

### Calculate mean TIR with the proposed method under Cox-model-based follow-up duration
The following code is used to calculate mean TIR by the proposed method under Cox-model-based follow-up duration with glucose range 70-180mg/dL, time window 0-3 days (0-4200 minutes)，20 bootstrap replicates, and covariates "x1" and "x2" with formula "x1+x2".

```{r}
print(estTIR(meanTIR_data, method = "proposed", model = "cox", formula = "x1+x2", time = c(0, 4200), range = c(70, 180), boot = 20))
```
